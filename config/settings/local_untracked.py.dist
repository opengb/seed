"""
:copyright (c) 2014 - 2017, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Department of Energy) and contributors. All rights reserved.  # NOQA
:author
:license: see LICENSE for more details.

seed local_untracked.py

    For this to work with dev settings:
        - run with dev settings (add this line to the .bashrc):
            $ export DJANGO_SETTINGS_MODULE=config.settings.dev
            or
            $ ./manage.py runserver --settings=config.settings.dev
        - add your setting to the DATABASES, AWS S3 config,
            CACHES, and CELERY_BROKER_URL
            i.e. everything here starting with 'your-'
    For local dev, all these services can run locally on localhost or 127.0.0.1 except for S3.
"""
import os

# Optional AWS Settings (if using RDS, SES, S3, etc)
#AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID', '')
#AWS_UPLOAD_CLIENT_KEY = AWS_ACCESS_KEY_ID
#AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', '')
#AWS_UPLOAD_CLIENT_SECRET_KEY = AWS_SECRET_ACCESS_KEY
#AWS_BUCKET_NAME = os.environ.get("AWS_BUCKET_NAME", "seed-dev-uploads")
#AWS_STORAGE_BUCKET_NAME = AWS_BUCKET_NAME

# email through SES (django-ses)
#EMAIL_BACKEND = 'django_ses.SESBackend'

# postgres DB config
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'seed',
        'USER': 'your-username',
        'PASSWORD': 'your-password',
        'HOST': 'your-host',
        'PORT': 'your-port',
    }
}

# Make sure to set a SECRET_KEY here or in your env variable
# Go here to generate a secret key: https://www.miniwebtool.com/django-secret-key-generator/
# SECRET_KEY = 'default-your-secret-key-here'

# Redis cache config.
#   If using AWS ElastiCache redis, the LOCATION setting looks something like:
#   'xx-yy-zzrr0aax9a.ntmprk.0001.usw2.cache.amazonaws.com:6379'
CACHES = {
    'default': {
        'BACKEND': 'redis_cache.cache.RedisCache',
        'LOCATION': "your-cache-url:your-cache-port",
        'OPTIONS': {'DB': 1},
        'TIMEOUT': 300
    }
}
CELERY_BROKER_URL = 'redis://your-cache-url:your-cache-port/1'

# If using AWS S3 for filesystem storage, then uncomment this, otherwise, leave it commented
# out to keep the media files in the correct location.
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
# STATICFILES_STORAGE = DEFAULT_FILE_STORAGE
# STATIC_URL = "https://%s.s3.amazonaws.com/" % AWS_STORAGE_BUCKET_NAME

INTERNAL_IPS = ('127.0.0.1',)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
        },
    },
}



